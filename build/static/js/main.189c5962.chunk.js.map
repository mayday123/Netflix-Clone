{"version":3,"sources":["logo.svg","axios.js","Row.js","requests.js","Banner.js","Nav.js","App.js","reportWebVitals.js","index.js"],"names":["instance","axios","create","baseURL","Row","title","fetchUrl","isLargeRow","useState","movies","setMovies","trailerUrl","setTrailerUrl","useEffect","a","get","request","data","results","fetchData","className","map","movie","onClick","movieTrailer","then","url","urlParams","URLSearchParams","URL","search","catch","error","console","log","handleClick","src","poster_path","backdrop_path","alt","name","id","style","padding","videoId","opts","heighr","width","playerVars","autoplay","API_KEY","requests","fetchTrending","fetchNetflixOriginals","fetchTopRatedMovies","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","Banner","str","n","setMovie","Math","floor","random","length","backgroundSize","backgroundImage","backgroundPosition","original_name","overview","substr","Nav","show","handleShow","window","addEventListener","scrollY","removeEventListener","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.189c5962.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import axios from \"axios\";\n\nconst instance = axios.create({\n    baseURL: \"https://api.themoviedb.org/3\",\n});\n// instance.get(\"/foo-bar\");\n\nexport default instance;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"./axios\";\nimport \"./Row.css\";\nimport YouTube from \"react-youtube\"\nimport movieTrailer from \"movie-trailer\"\n\nconst base_url = \"https://image.tmdb.org/t/p/original/\";\n\nfunction Row({ title, fetchUrl, isLargeRow }) {\n    const [movies, setMovies] = useState([]);\n    const [trailerUrl, setTrailerUrl] = useState(\"\")\n    useEffect(() => {\n        async function fetchData() {\n            const request = await axios.get(fetchUrl);\n            setMovies(request.data.results);\n            return request;\n        }\n        fetchData();\n    }, [fetchUrl]);\n    const opts = {\n        heighr: \"390\",\n        width: \"100%\",\n        playerVars: {\n            autoplay: 1,\n        }\n    }\n    const handleClick = (movie) => {\n        if (trailerUrl) {\n            setTrailerUrl('')\n        } else {\n            movieTrailer(movie?.title || \"\")\n                .then((url) => {\n                    const urlParams = new URLSearchParams(new URL(url).search)\n                    setTrailerUrl(urlParams.get('v'))\n                })\n                .catch((error) => console.log(error))\n        }\n    }\n\n    return (\n        <div className=\"row\">\n            <h2>{title}</h2>\n            <div className=\"row__posters\">\n                {movies.map((movie) => (\n                    <img\n                        key={movie.id}\n                        onClick={() => handleClick(movie)}\n                        className={`row__poster ${isLargeRow && \"row__posterLarge\"}`}\n                        src={`${base_url}${isLargeRow ? movie.poster_path : movie.backdrop_path\n                            }`}\n                        alt={movie.name}\n                    />\n                ))}\n            </div>\n            <div style={{ padding: \"40px\" }}>\n                {trailerUrl && <YouTube videoId={trailerUrl} opts={opts} />}\n            </div>\n        </div>\n    );\n}\n\nexport default Row;\n\n","const API_KEY = \"fe0d973530560d646c77369efdaea30e\";\n\nconst requests = {\n    fetchTrending: `/trending/all/week?api_key=${API_KEY}&language=en-US`,\n    fetchNetflixOriginals: `/discover/tv?api_key=${API_KEY}&with_networks=213`,\n    fetchTopRatedMovies: `/movie/top_rated?api_key=${API_KEY}&language=en-US`,\n    fetchActionMovies: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\n    fetchComedyMovies: `/discover/movie?api_key=${API_KEY}&with_genres=35`,\n    fetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\n    fetchRomanceMovies: `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\n    fetchDocumentaries: `/discover/movie?api_key=${API_KEY}&with_genres=99`,\n};\nexport default requests;","import React, { useState, useEffect } from \"react\";\nimport axios from \"./axios\";\nimport requests from \"./requests\";\nimport \"./Banner.css\";\nfunction Banner() {\n    const [movie, setMovie] = useState([]);\n    useEffect(() => {\n        async function fetchData() {\n            const request = await axios.get(requests.fetchNetflixOriginals);\n            setMovie(\n                request?.data.results[\n                Math.floor(Math.random() * request.data.results.length)\n                ]\n            );\n            return request;\n        }\n        fetchData();\n    }, []);\n\n    function truncate(str, n) {\n        return str?.length > n ? str.substr(0, n - 1) + \"...\" : str;\n    }\n    return (\n        <header\n            className=\"banner\"\n            style={{\n                backgroundSize: \"cover\",\n                backgroundImage: `url(\"https://image.tmdb.org/t/p/original/${movie?.backdrop_path}\")`,\n                backgroundPosition: \"center center\",\n            }}\n        >\n            <div className=\"banner__contents\">\n                <h1 className=\"banner__title\">\n                    {movie?.title || movie?.name || movie.original_name}\n                </h1>\n                <div className=\"banner__buttons\">\n                    <button className=\"banner__button\">Play</button>\n                    <button className=\"banner__button\">My List</button>\n                </div>\n                <h1 className=\"banner__description\">\n                    {truncate(movie?.overview, 150)}\n                </h1>\n            </div>\n            <div className=\"banner__fadeBottom\" />\n        </header>\n    );\n}\n\nexport default Banner;\n","import React, { useState, useEffect } from \"react\";\nimport \"./Nav.css\";\n\nfunction Nav() {\n    const [show, handleShow] = useState(false);\n    useEffect(() => {\n        window.addEventListener(\"scroll\", () => {\n            if (window.scrollY > 100) {\n                handleShow(true);\n            } else handleShow(false);\n        });\n        return () => {\n            window.removeEventListener(\"scroll\");\n        };\n    }, []);\n\n    return (\n        <div className={`nav ${show && \"nav__black\"}`}>\n            <img\n                className=\"nav__logo\"\n                src=\"https://images-wixmp-ed30a86b8c4ca887773594c2.wixmp.com/f/12c6f684-d447-4457-84fa-12033cfd581e/d9z3o32-2c299a83-49a9-44c2-bc23-b0b5070a546b.png/v1/fill/w_1024,h_512,strp/netflix_logo_background__2_by_sixmonthslate_d9z3o32-fullview.png?token=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJ1cm46YXBwOiIsImlzcyI6InVybjphcHA6Iiwib2JqIjpbW3siaGVpZ2h0IjoiPD01MTIiLCJwYXRoIjoiXC9mXC8xMmM2ZjY4NC1kNDQ3LTQ0NTctODRmYS0xMjAzM2NmZDU4MWVcL2Q5ejNvMzItMmMyOTlhODMtNDlhOS00NGMyLWJjMjMtYjBiNTA3MGE1NDZiLnBuZyIsIndpZHRoIjoiPD0xMDI0In1dXSwiYXVkIjpbInVybjpzZXJ2aWNlOmltYWdlLm9wZXJhdGlvbnMiXX0.WKy-rj_8y7ziLuhhtAES7jddy-eUpz6PQQ331bp7rRI\"\n                alt=\"Netflix Logo\"\n            />\n            <img\n                className=\"nav__avatar\"\n                src=\"https://i.pinimg.com/originals/0d/dc/ca/0ddccae723d85a703b798a5e682c23c1.png\"\n                alt=\"Avatar logo\"\n            />\n        </div>\n    );\n}\n\nexport default Nav;\n","import logo from './logo.svg';\nimport React from \"react\";\nimport \"./App.css\";\nimport Row from \"./Row\";\nimport requests from \"./requests\";\nimport Banner from \"./Banner\";\nimport Nav from \"./Nav\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Nav />\n      <Banner />\n      <Row\n        title=\"NETFLIX ORIGINALS\"\n        fetchUrl={requests.fetchNetflixOriginals}\n        isLargeRow\n      />\n      <Row title=\"Trending Now\" fetchUrl={requests.fetchTrending} />\n      <Row title=\"Top Rated\" fetchUrl={requests.fetchTopRatedMovies} />\n      <Row title=\"Action Movies\" fetchUrl={requests.fetchActionMovies} />\n      <Row title=\"Comedy Movies\" fetchUrl={requests.fetchComedyMovies} />\n      <Row title=\"Horror Movies\" fetchUrl={requests.fetchHorrorMovies} />\n      <Row title=\"Romance Movies\" fetchUrl={requests.fetchRomanceMovies} />\n      <Row\n        title=\"Documentaries Movies\"\n        fetchUrl={requests.fetchDocumentaries}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}